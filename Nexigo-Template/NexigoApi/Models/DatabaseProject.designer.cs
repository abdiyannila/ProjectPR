#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexigoApi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Project Makers4")]
	public partial class DatabaseProjectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBudget_Source(Budget_Source instance);
    partial void UpdateBudget_Source(Budget_Source instance);
    partial void DeleteBudget_Source(Budget_Source instance);
    partial void InsertSubmition(Submition instance);
    partial void UpdateSubmition(Submition instance);
    partial void DeleteSubmition(Submition instance);
    partial void InsertComment_History(Comment_History instance);
    partial void UpdateComment_History(Comment_History instance);
    partial void DeleteComment_History(Comment_History instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertExpat(Expat instance);
    partial void UpdateExpat(Expat instance);
    partial void DeleteExpat(Expat instance);
    partial void InsertItemRequest(ItemRequest instance);
    partial void UpdateItemRequest(ItemRequest instance);
    partial void DeleteItemRequest(ItemRequest instance);
    partial void InsertMaterial_Group(Material_Group instance);
    partial void UpdateMaterial_Group(Material_Group instance);
    partial void DeleteMaterial_Group(Material_Group instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertRequester(Requester instance);
    partial void UpdateRequester(Requester instance);
    partial void DeleteRequester(Requester instance);
    partial void InsertStaff_Level(Staff_Level instance);
    partial void UpdateStaff_Level(Staff_Level instance);
    partial void DeleteStaff_Level(Staff_Level instance);
    #endregion
		
		public DatabaseProjectDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Project_Makers4ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseProjectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseProjectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseProjectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseProjectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Budget_Source> Budget_Sources
		{
			get
			{
				return this.GetTable<Budget_Source>();
			}
		}
		
		public System.Data.Linq.Table<Submition> Submitions
		{
			get
			{
				return this.GetTable<Submition>();
			}
		}
		
		public System.Data.Linq.Table<Comment_History> Comment_Histories
		{
			get
			{
				return this.GetTable<Comment_History>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Expat> Expats
		{
			get
			{
				return this.GetTable<Expat>();
			}
		}
		
		public System.Data.Linq.Table<ItemRequest> ItemRequests
		{
			get
			{
				return this.GetTable<ItemRequest>();
			}
		}
		
		public System.Data.Linq.Table<Material_Group> Material_Groups
		{
			get
			{
				return this.GetTable<Material_Group>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Requester> Requesters
		{
			get
			{
				return this.GetTable<Requester>();
			}
		}
		
		public System.Data.Linq.Table<Staff_Level> Staff_Levels
		{
			get
			{
				return this.GetTable<Staff_Level>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget_Source")]
	public partial class Budget_Source : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Field_Name;
		
		private string _Owner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnField_NameChanging(string value);
    partial void OnField_NameChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    #endregion
		
		public Budget_Source()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Field_Name
		{
			get
			{
				return this._Field_Name;
			}
			set
			{
				if ((this._Field_Name != value))
				{
					this.OnField_NameChanging(value);
					this.SendPropertyChanging();
					this._Field_Name = value;
					this.SendPropertyChanged("Field_Name");
					this.OnField_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Submition")]
	public partial class Submition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessID;
		
		private string _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _SubmittedDate;
		
		private string _Status;
		
		private string _Employee;
		
		private string _EvaluationBy;
		
		private string _Evaluation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIDChanging(int value);
    partial void OnProcessIDChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnSubmittedDateChanging(System.DateTime value);
    partial void OnSubmittedDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEmployeeChanging(string value);
    partial void OnEmployeeChanged();
    partial void OnEvaluationByChanging(string value);
    partial void OnEvaluationByChanged();
    partial void OnEvaluationChanging(string value);
    partial void OnEvaluationChanged();
    #endregion
		
		public Submition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessID
		{
			get
			{
				return this._ProcessID;
			}
			set
			{
				if ((this._ProcessID != value))
				{
					this.OnProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessID = value;
					this.SendPropertyChanged("ProcessID");
					this.OnProcessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedDate", DbType="DateTime NOT NULL")]
		public System.DateTime SubmittedDate
		{
			get
			{
				return this._SubmittedDate;
			}
			set
			{
				if ((this._SubmittedDate != value))
				{
					this.OnSubmittedDateChanging(value);
					this.SendPropertyChanging();
					this._SubmittedDate = value;
					this.SendPropertyChanged("SubmittedDate");
					this.OnSubmittedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this.OnEmployeeChanging(value);
					this.SendPropertyChanging();
					this._Employee = value;
					this.SendPropertyChanged("Employee");
					this.OnEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EvaluationBy
		{
			get
			{
				return this._EvaluationBy;
			}
			set
			{
				if ((this._EvaluationBy != value))
				{
					this.OnEvaluationByChanging(value);
					this.SendPropertyChanging();
					this._EvaluationBy = value;
					this.SendPropertyChanged("EvaluationBy");
					this.OnEvaluationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evaluation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Evaluation
		{
			get
			{
				return this._Evaluation;
			}
			set
			{
				if ((this._Evaluation != value))
				{
					this.OnEvaluationChanging(value);
					this.SendPropertyChanging();
					this._Evaluation = value;
					this.SendPropertyChanged("Evaluation");
					this.OnEvaluationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment_History")]
	public partial class Comment_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Payrole_Number;
		
		private string _Image;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayrole_NumberChanging(int value);
    partial void OnPayrole_NumberChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Comment_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payrole_Number", DbType="Int NOT NULL")]
		public int Payrole_Number
		{
			get
			{
				return this._Payrole_Number;
			}
			set
			{
				if ((this._Payrole_Number != value))
				{
					this.OnPayrole_NumberChanging(value);
					this.SendPropertyChanging();
					this._Payrole_Number = value;
					this.SendPropertyChanged("Payrole_Number");
					this.OnPayrole_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Division_Name;
		
		private string _Manager_Name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDivision_NameChanging(string value);
    partial void OnDivision_NameChanged();
    partial void OnManager_NameChanging(string value);
    partial void OnManager_NameChanged();
    #endregion
		
		public Division()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Division_Name
		{
			get
			{
				return this._Division_Name;
			}
			set
			{
				if ((this._Division_Name != value))
				{
					this.OnDivision_NameChanging(value);
					this.SendPropertyChanging();
					this._Division_Name = value;
					this.SendPropertyChanged("Division_Name");
					this.OnDivision_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Manager_Name
		{
			get
			{
				return this._Manager_Name;
			}
			set
			{
				if ((this._Manager_Name != value))
				{
					this.OnManager_NameChanging(value);
					this.SendPropertyChanging();
					this._Manager_Name = value;
					this.SendPropertyChanged("Manager_Name");
					this.OnManager_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Employees", ThisKey="Id", OtherKey="Division_Code")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffID;
		
		private string _Staff_Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _Profil_Picture;
		
		private string _Gender;
		
		private int _Staff_Level;
		
		private int _Division_Code;
		
		private string _Address;
		
		private System.DateTime _Joined_Date;
		
		private int _Expat;
		
		private int _Contract;
		
		private EntityRef<Division> _Division;
		
		private EntityRef<Expat> _Expat1;
		
		private EntityRef<Staff_Level> _Staff_Level1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIDChanging(int value);
    partial void OnStaffIDChanged();
    partial void OnStaff_NameChanging(string value);
    partial void OnStaff_NameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnProfil_PictureChanging(string value);
    partial void OnProfil_PictureChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnStaff_LevelChanging(int value);
    partial void OnStaff_LevelChanged();
    partial void OnDivision_CodeChanging(int value);
    partial void OnDivision_CodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnJoined_DateChanging(System.DateTime value);
    partial void OnJoined_DateChanged();
    partial void OnExpatChanging(int value);
    partial void OnExpatChanged();
    partial void OnContractChanging(int value);
    partial void OnContractChanged();
    #endregion
		
		public Employee()
		{
			this._Division = default(EntityRef<Division>);
			this._Expat1 = default(EntityRef<Expat>);
			this._Staff_Level1 = default(EntityRef<Staff_Level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Name
		{
			get
			{
				return this._Staff_Name;
			}
			set
			{
				if ((this._Staff_Name != value))
				{
					this.OnStaff_NameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Name = value;
					this.SendPropertyChanged("Staff_Name");
					this.OnStaff_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profil_Picture", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Profil_Picture
		{
			get
			{
				return this._Profil_Picture;
			}
			set
			{
				if ((this._Profil_Picture != value))
				{
					this.OnProfil_PictureChanging(value);
					this.SendPropertyChanging();
					this._Profil_Picture = value;
					this.SendPropertyChanged("Profil_Picture");
					this.OnProfil_PictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Level", DbType="Int NOT NULL")]
		public int Staff_Level
		{
			get
			{
				return this._Staff_Level;
			}
			set
			{
				if ((this._Staff_Level != value))
				{
					if (this._Staff_Level1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaff_LevelChanging(value);
					this.SendPropertyChanging();
					this._Staff_Level = value;
					this.SendPropertyChanged("Staff_Level");
					this.OnStaff_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_Code", DbType="Int NOT NULL")]
		public int Division_Code
		{
			get
			{
				return this._Division_Code;
			}
			set
			{
				if ((this._Division_Code != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivision_CodeChanging(value);
					this.SendPropertyChanging();
					this._Division_Code = value;
					this.SendPropertyChanged("Division_Code");
					this.OnDivision_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joined_Date", DbType="Date NOT NULL")]
		public System.DateTime Joined_Date
		{
			get
			{
				return this._Joined_Date;
			}
			set
			{
				if ((this._Joined_Date != value))
				{
					this.OnJoined_DateChanging(value);
					this.SendPropertyChanging();
					this._Joined_Date = value;
					this.SendPropertyChanged("Joined_Date");
					this.OnJoined_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expat", DbType="Int NOT NULL")]
		public int Expat
		{
			get
			{
				return this._Expat;
			}
			set
			{
				if ((this._Expat != value))
				{
					if (this._Expat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpatChanging(value);
					this.SendPropertyChanging();
					this._Expat = value;
					this.SendPropertyChanged("Expat");
					this.OnExpatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract", DbType="Int NOT NULL")]
		public int Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					this.OnContractChanging(value);
					this.SendPropertyChanging();
					this._Contract = value;
					this.SendPropertyChanged("Contract");
					this.OnContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Employee", Storage="_Division", ThisKey="Division_Code", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Division_Code = value.Id;
					}
					else
					{
						this._Division_Code = default(int);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expat_Employee", Storage="_Expat1", ThisKey="Expat", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Expat Expat1
		{
			get
			{
				return this._Expat1.Entity;
			}
			set
			{
				Expat previousValue = this._Expat1.Entity;
				if (((previousValue != value) 
							|| (this._Expat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Expat1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Expat1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Expat = value.Id;
					}
					else
					{
						this._Expat = default(int);
					}
					this.SendPropertyChanged("Expat1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Level_Employee", Storage="_Staff_Level1", ThisKey="Staff_Level", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Staff_Level Staff_Level1
		{
			get
			{
				return this._Staff_Level1.Entity;
			}
			set
			{
				Staff_Level previousValue = this._Staff_Level1.Entity;
				if (((previousValue != value) 
							|| (this._Staff_Level1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff_Level1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Staff_Level1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Staff_Level = value.Id;
					}
					else
					{
						this._Staff_Level = default(int);
					}
					this.SendPropertyChanged("Staff_Level1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expats")]
	public partial class Expat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Expat()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expat_Employee", Storage="_Employees", ThisKey="Id", OtherKey="Expat")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Expat1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Expat1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemRequest")]
	public partial class ItemRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Material_Group;
		
		private string _Item;
		
		private string _Description;
		
		private int _Quantity;
		
		private int _Estimate_Price;
		
		private int _Total_Estimate_Price;
		
		private int _Sources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterial_GroupChanging(string value);
    partial void OnMaterial_GroupChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnEstimate_PriceChanging(int value);
    partial void OnEstimate_PriceChanged();
    partial void OnTotal_Estimate_PriceChanging(int value);
    partial void OnTotal_Estimate_PriceChanged();
    partial void OnSourcesChanging(int value);
    partial void OnSourcesChanged();
    #endregion
		
		public ItemRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material_Group", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Material_Group
		{
			get
			{
				return this._Material_Group;
			}
			set
			{
				if ((this._Material_Group != value))
				{
					this.OnMaterial_GroupChanging(value);
					this.SendPropertyChanging();
					this._Material_Group = value;
					this.SendPropertyChanged("Material_Group");
					this.OnMaterial_GroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estimate_Price", DbType="Int NOT NULL")]
		public int Estimate_Price
		{
			get
			{
				return this._Estimate_Price;
			}
			set
			{
				if ((this._Estimate_Price != value))
				{
					this.OnEstimate_PriceChanging(value);
					this.SendPropertyChanging();
					this._Estimate_Price = value;
					this.SendPropertyChanged("Estimate_Price");
					this.OnEstimate_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Estimate_Price", DbType="Int NOT NULL")]
		public int Total_Estimate_Price
		{
			get
			{
				return this._Total_Estimate_Price;
			}
			set
			{
				if ((this._Total_Estimate_Price != value))
				{
					this.OnTotal_Estimate_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Estimate_Price = value;
					this.SendPropertyChanged("Total_Estimate_Price");
					this.OnTotal_Estimate_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sources", DbType="Int NOT NULL")]
		public int Sources
		{
			get
			{
				return this._Sources;
			}
			set
			{
				if ((this._Sources != value))
				{
					this.OnSourcesChanging(value);
					this.SendPropertyChanging();
					this._Sources = value;
					this.SendPropertyChanged("Sources");
					this.OnSourcesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material_Group")]
	public partial class Material_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Material> _Materials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Material_Group()
		{
			this._Materials = new EntitySet<Material>(new Action<Material>(this.attach_Materials), new Action<Material>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Group_Material", Storage="_Materials", ThisKey="Id", OtherKey="Group_Id")]
		public EntitySet<Material> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Material_Group = this;
		}
		
		private void detach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Material_Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materials")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Group_Id;
		
		private EntityRef<Material_Group> _Material_Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroup_IdChanging(int value);
    partial void OnGroup_IdChanged();
    #endregion
		
		public Material()
		{
			this._Material_Group = default(EntityRef<Material_Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Id", DbType="Int NOT NULL")]
		public int Group_Id
		{
			get
			{
				return this._Group_Id;
			}
			set
			{
				if ((this._Group_Id != value))
				{
					if (this._Material_Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IdChanging(value);
					this.SendPropertyChanging();
					this._Group_Id = value;
					this.SendPropertyChanged("Group_Id");
					this.OnGroup_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_Group_Material", Storage="_Material_Group", ThisKey="Group_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Material_Group Material_Group
		{
			get
			{
				return this._Material_Group.Entity;
			}
			set
			{
				Material_Group previousValue = this._Material_Group.Entity;
				if (((previousValue != value) 
							|| (this._Material_Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material_Group.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._Material_Group.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._Group_Id = value.Id;
					}
					else
					{
						this._Group_Id = default(int);
					}
					this.SendPropertyChanged("Material_Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requester")]
	public partial class Requester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Requester_Name;
		
		private string _Requester_Position;
		
		private string _Company;
		
		private string _Division_Name;
		
		private string _Manager_Division;
		
		private string _Currenly;
		
		private System.DateTime _Expected_Date;
		
		private string _Material_Location;
		
		private int _Budget_Source;
		
		private string _Owner;
		
		private string _Justification;
		
		private System.Nullable<int> _BPM_PR_Number;
		
		private System.DateTime _Creation_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequester_NameChanging(string value);
    partial void OnRequester_NameChanged();
    partial void OnRequester_PositionChanging(string value);
    partial void OnRequester_PositionChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnDivision_NameChanging(string value);
    partial void OnDivision_NameChanged();
    partial void OnManager_DivisionChanging(string value);
    partial void OnManager_DivisionChanged();
    partial void OnCurrenlyChanging(string value);
    partial void OnCurrenlyChanged();
    partial void OnExpected_DateChanging(System.DateTime value);
    partial void OnExpected_DateChanged();
    partial void OnMaterial_LocationChanging(string value);
    partial void OnMaterial_LocationChanged();
    partial void OnBudget_SourceChanging(int value);
    partial void OnBudget_SourceChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnJustificationChanging(string value);
    partial void OnJustificationChanged();
    partial void OnBPM_PR_NumberChanging(System.Nullable<int> value);
    partial void OnBPM_PR_NumberChanged();
    partial void OnCreation_DateChanging(System.DateTime value);
    partial void OnCreation_DateChanged();
    #endregion
		
		public Requester()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requester_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Requester_Name
		{
			get
			{
				return this._Requester_Name;
			}
			set
			{
				if ((this._Requester_Name != value))
				{
					this.OnRequester_NameChanging(value);
					this.SendPropertyChanging();
					this._Requester_Name = value;
					this.SendPropertyChanged("Requester_Name");
					this.OnRequester_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requester_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Requester_Position
		{
			get
			{
				return this._Requester_Position;
			}
			set
			{
				if ((this._Requester_Position != value))
				{
					this.OnRequester_PositionChanging(value);
					this.SendPropertyChanging();
					this._Requester_Position = value;
					this.SendPropertyChanged("Requester_Position");
					this.OnRequester_PositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Division_Name
		{
			get
			{
				return this._Division_Name;
			}
			set
			{
				if ((this._Division_Name != value))
				{
					this.OnDivision_NameChanging(value);
					this.SendPropertyChanging();
					this._Division_Name = value;
					this.SendPropertyChanged("Division_Name");
					this.OnDivision_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_Division", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Manager_Division
		{
			get
			{
				return this._Manager_Division;
			}
			set
			{
				if ((this._Manager_Division != value))
				{
					this.OnManager_DivisionChanging(value);
					this.SendPropertyChanging();
					this._Manager_Division = value;
					this.SendPropertyChanged("Manager_Division");
					this.OnManager_DivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currenly", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Currenly
		{
			get
			{
				return this._Currenly;
			}
			set
			{
				if ((this._Currenly != value))
				{
					this.OnCurrenlyChanging(value);
					this.SendPropertyChanging();
					this._Currenly = value;
					this.SendPropertyChanged("Currenly");
					this.OnCurrenlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expected_Date", DbType="Date NOT NULL")]
		public System.DateTime Expected_Date
		{
			get
			{
				return this._Expected_Date;
			}
			set
			{
				if ((this._Expected_Date != value))
				{
					this.OnExpected_DateChanging(value);
					this.SendPropertyChanging();
					this._Expected_Date = value;
					this.SendPropertyChanged("Expected_Date");
					this.OnExpected_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material_Location", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Material_Location
		{
			get
			{
				return this._Material_Location;
			}
			set
			{
				if ((this._Material_Location != value))
				{
					this.OnMaterial_LocationChanging(value);
					this.SendPropertyChanging();
					this._Material_Location = value;
					this.SendPropertyChanged("Material_Location");
					this.OnMaterial_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Budget_Source", DbType="Int NOT NULL")]
		public int Budget_Source
		{
			get
			{
				return this._Budget_Source;
			}
			set
			{
				if ((this._Budget_Source != value))
				{
					this.OnBudget_SourceChanging(value);
					this.SendPropertyChanging();
					this._Budget_Source = value;
					this.SendPropertyChanged("Budget_Source");
					this.OnBudget_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Justification", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Justification
		{
			get
			{
				return this._Justification;
			}
			set
			{
				if ((this._Justification != value))
				{
					this.OnJustificationChanging(value);
					this.SendPropertyChanging();
					this._Justification = value;
					this.SendPropertyChanged("Justification");
					this.OnJustificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPM_PR_Number", DbType="Int")]
		public System.Nullable<int> BPM_PR_Number
		{
			get
			{
				return this._BPM_PR_Number;
			}
			set
			{
				if ((this._BPM_PR_Number != value))
				{
					this.OnBPM_PR_NumberChanging(value);
					this.SendPropertyChanging();
					this._BPM_PR_Number = value;
					this.SendPropertyChanged("BPM_PR_Number");
					this.OnBPM_PR_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creation_Date", DbType="Date NOT NULL")]
		public System.DateTime Creation_Date
		{
			get
			{
				return this._Creation_Date;
			}
			set
			{
				if ((this._Creation_Date != value))
				{
					this.OnCreation_DateChanging(value);
					this.SendPropertyChanging();
					this._Creation_Date = value;
					this.SendPropertyChanged("Creation_Date");
					this.OnCreation_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff_Level")]
	public partial class Staff_Level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Field_Name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnField_NameChanging(string value);
    partial void OnField_NameChanged();
    #endregion
		
		public Staff_Level()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Field_Name
		{
			get
			{
				return this._Field_Name;
			}
			set
			{
				if ((this._Field_Name != value))
				{
					this.OnField_NameChanging(value);
					this.SendPropertyChanging();
					this._Field_Name = value;
					this.SendPropertyChanged("Field_Name");
					this.OnField_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Level_Employee", Storage="_Employees", ThisKey="Id", OtherKey="Staff_Level")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Staff_Level1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Staff_Level1 = null;
		}
	}
}
#pragma warning restore 1591
